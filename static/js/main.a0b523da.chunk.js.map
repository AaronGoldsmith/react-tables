{"version":3,"sources":["CandidateList.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["candidates","name","role","connected","status","id","DropDownHire","props","react_default","a","createElement","className","data-toggle","children","onChange","updateStatus","data","href","CandidateList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","update","currentData","unique","_status","results","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","candidate","value","push","err","return","search","str","group","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","includes","chooseStatus","event","target","innerHTML","copy","JSON","parse","stringify","setState","handleInput","trim","toLowerCase","indexOf","Oparts","split","arr","concat","Aparts","groupA","groupB","console","log","handleReset","document","getElementById","text","state","_this2","type","onClick","map","CandidateList_DropDownHire","React","Component","App","src","logo","alt","CandidateList_CandidateList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.a0b523da.chunk.js","sourcesContent":["import React from 'react';\nlet candidates = [\n  {\n    name: \"Maurine Fisch\",\n    role: \"Sales\",\n    connected: \"2015-12-01\",\n    status: \"Hire\",\n    id: 0\n  },\n  {\n    name: \"Caleb Smith\",\n    role: \"Engineer\",\n    connected: \"2018-10-17\",\n    status: \"Hire\",\n    id: 1\n  },\n  {\n    name: \"Ava Greer\",\n    role: \"Manager\",\n    connected: \"2018-10-15\",\n    status: \"Hire\",\n    id: 2\n  },\n  {\n    name: \"Nathan Poppins\",\n    role: \"Engineer\",\n    connected: \"2018-10-11\",\n    status: \"Explored\",\n    id: 3\n  },\n  {\n    name: \"Donald Dipson\",\n    role: \"Engineer\",\n    connected: \"2018-07-11\",\n    status: \"Explored\",\n    id: 4\n  },\n  {\n    name: \"Shannon Rodriguez\",\n    role: \"Customer Support\",\n    connected: \"2018-09-11\",\n    status: \"Scheduled\",\n    id: 5\n  },\n  {\n    name: \"Aaron Goldsmith\",\n    role: \"Engineer\",\n    connected: \"2018-12-11\",\n    status: \"Screen\",\n    id: 6\n  },\n  {\n    name: \"Sean Tiburon\",\n    role: \"Sales\",\n    connected: \"2018-12-09\",\n    status: \"Screen\",\n    id: 7\n  },\n  {\n    name: \"Sarah Henderson\",\n    role: \"Engineer\",\n    connected: \"2018-10-15\",\n    status: \"Screen\",\n    id: 8\n  },\n  {\n    name: \"William Goldberg\",\n    role: \"Manager\",\n    connected: \"2018-11-11\",\n    status: \"Screen\",\n    id: 9\n  }\n];\n\nconst DropDownHire = props => {\n  return (\n    <td className=\"dropdown\">\n      <span className=\"dropdown-toggle\" data-toggle=\"dropdown\">\n        {props.children}&nbsp;\n      </span>\n      <ul onChange={props.updateStatus} className=\"dropdown-menu\">\n        <li>\n          <button data={props.id} href=\"#\">\n            Screen\n          </button>\n        </li>\n        <li>\n          <button data={props.id} href=\"#\">\n            Scheduled\n          </button>\n        </li>\n        <li>\n          <button data={props.id} href=\"#\">\n            Explored\n          </button>\n        </li>\n        <li>\n          <button data={props.id} href=\"#\">\n            Hire\n          </button>\n        </li>\n      </ul>\n    </td>\n  );\n};\n\nexport default class CandidateList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: candidates\n    };\n  }\n  update = (currentData, unique, _status) => {\n    var results = [];\n    for (let candidate of currentData) {\n      if (candidate.id === unique) {\n        candidate.status = _status;\n      }\n      results.push(candidate);\n    }\n    return results;\n  };\n  search = (str, group) => {\n    let results = [];\n    for (var candidate of group) {\n      if (\n        candidate.name.includes(str) ||\n        candidate.role.includes(str) ||\n        candidate.connected.includes(str) ||\n        candidate.status.includes(str)\n      ) {\n        results.push(candidate);\n      }\n    }\n    return results;\n  };\n  chooseStatus = event => {\n    let status = event.target.innerHTML;\n    let copy = JSON.parse(JSON.stringify(candidates));\n    candidates = this.update(copy, event.target.data, status);\n    this.setState({ results: candidates });\n  };\n  handleInput = event => {\n    let str = event.target.value.trim();\n    if (str.toLowerCase().indexOf(\" or \") >= 0) {\n      let Oparts = str.split(\" or \");\n      let arr = this.search(Oparts[0], candidates).concat(\n        this.search(Oparts[1], candidates)\n      );\n      this.setState({ results: arr });\n    } else if (str.toLowerCase().indexOf(\" and \") >= 0) {\n      let Aparts = str.split(\" and \");\n      let groupA = this.search(Aparts[0], candidates);\n      let groupB = this.search(Aparts[1], groupA);\n      console.log(this.search(Aparts[0], groupB));\n\n      this.setState({ results: this.search(Aparts[0], groupB) }); // exclusively search from groupA\n    } else {\n      this.setState({ results: this.search(str, candidates) });\n    }\n  };\n  handleReset = () => {\n    document.getElementById('inputQ').text = \"\";\n    // $(\"#inputQ\").val(\"\");\n    this.setState({ results: candidates });\n  };\n\n  render() {\n    return (\n      <div>\n        <div id=\"query\">\n          <input type=\"text\" onChange={this.handleInput} id=\"inputQ\" />\n          <div id=\"reset\" onClick={this.handleReset}>\n            RESET\n          </div>\n        </div>\n        <table>\n          <tr>\n            <th>Name</th>\n            <th>Role</th>\n            <th>Connected On</th>\n            <th>Status</th>\n          </tr>\n          <tbody>\n          {this.state.results.map(candidate => (\n            <tr>\n              <td>{candidate.name}</td>\n              <td>{candidate.role}</td>\n              <td>{candidate.connected}</td>\n              <DropDownHire id={candidate.id} updateStatus={this.chooseStatus}>\n                {candidate.status}\n              </DropDownHire>\n            </tr>\n          ))}\n          </tbody>\n        </table>\n\n        <div />\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport CandidateList from './CandidateList.js';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          Aaron Goldsmith\n          <CandidateList />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}